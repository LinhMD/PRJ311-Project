/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.*;
import DTO.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.*;

/**
 *
 * @author USER
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private static Vector<Customer> customers;
    private static Vector<Service> services;
    private static SimpleDateFormat dateFormat;
    static {
        try {
            customers = CustomerDAO.getCustomers();
            services = ServiceDAO.getServices();
            dateFormat = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss a");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
            System.exit(-1);
        }
    }

    public Invoice invoice;

    public MainFrame() {
        initComponents();
        refreshMainFrame();
    }

    private void refreshMainFrame() {
        loadCustomer();
        loadServices();
        loadPet(null);
        loadInvoice();
        loadTimer();
    }

    private void loadTimer() {
        Thread thread = new Thread(() -> {
            while(true){
                Date time = Calendar.getInstance().getTime();
                txtDate.setText(dateFormat.format(time));
                invoice.setDate(time);
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        });
        thread.start();
    }

    private void loadInvoice(){
        try {
            int latestID = InvoiceDAO.getLatestID() + 1;
            this.txtInvoiceID.setText(latestID + "");
            this.txtInvoiceID.setEnabled(false);
            invoice = new Invoice(latestID, Calendar.getInstance().getTime());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadCustomer(){
        this.cbxCustomer.setModel(new DefaultComboBoxModel<>(customers));
    }

    private void loadServices(){
        this.cbxServices.setModel(new DefaultComboBoxModel<>(services));
    }

    private void loadPet(ActionEvent actionEvent) {
        Customer customer = (Customer) this.cbxCustomer.getSelectedItem();
        if(customer != null) this.cbxPet.setModel(new DefaultComboBoxModel<>(customer.getCustomerPets()));
    }

    private void chooseService(ActionEvent actionEvent) {
        Pet selectedPet = (Pet) this.cbxPet.getSelectedItem();
        Service selectedService = (Service) this.cbxServices.getSelectedItem();
        InvoiceDetail invoiceDetail = new InvoiceDetail(invoice, selectedPet, selectedService);

        if(this.invoice.getDetails().contains(invoiceDetail)){
            JOptionPane.showMessageDialog(null, "A pet can not have same service in one Invoice");
        }else{
            if(this.invoice.getDetails().add(invoiceDetail)){
                if(invoice.getCustomer() == null){
                    invoice.setCustomer((Customer) cbxCustomer.getSelectedItem());
                    this.cbxCustomer.setEnabled(false);
                }
                DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
                Vector<String> row = new Vector<>();
                row.add(invoiceDetail.getPet().getId() + "");
                row.add(invoiceDetail.getPet().getName());
                row.add(invoiceDetail.getService().getName());
                row.add(invoiceDetail.getService().getPrice() + "");
                model.addRow(row);

                JOptionPane.showMessageDialog(null, "Add service successfully");
            } else
                JOptionPane.showMessageDialog(null, "Add service fail");
        }
    }

    private void createInvoice(ActionEvent actionEvent){
        try {
            InvoiceDAO.insertInvoice(this.invoice);
            JOptionPane.showMessageDialog(null, "Create new invoice successfully");
            this.dispose();
            System.gc();
            java.awt.EventQueue.invokeLater(() -> new MainFrame().setVisible(true));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void viewInvoice(ActionEvent actionEvent) {
        //TODO: ?????????

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        txtInvoiceID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbxCustomer = new JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbxPet = new JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbxServices = new JComboBox<>();
        btnChooseServiece = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnCreateInvoice = new javax.swing.JButton();
        btnView = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("InvoiceID");

        jLabel2.setText("Date");

        txtDate.setEnabled(false);

        jLabel3.setText("Customer");

        cbxCustomer.addActionListener(this::loadPet);

        jLabel4.setText("Pet");

        jLabel5.setText("Service");

        btnChooseServiece.setText("Choose service");
        btnChooseServiece.addActionListener(this::chooseService);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Pet ID", "Pet Name", "Service", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        btnCreateInvoice.setText("Create Invoice Detail");
        btnCreateInvoice.addActionListener(this::createInvoice);

        btnView.setText("View");
        btnView.addActionListener(this::viewInvoice);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtInvoiceID, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .addComponent(cbxCustomer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)))
                            .addComponent(cbxServices, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxPet, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(btnChooseServiece)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(btnCreateInvoice)
                .addGap(58, 58, 58)
                .addComponent(btnView)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInvoiceID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxPet, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxServices, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseServiece))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateInvoice)
                    .addComponent(btnView))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents



    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        try{
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException | ClassNotFoundException e) {
            e.printStackTrace();
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MainFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChooseServiece;
    private javax.swing.JButton btnCreateInvoice;
    private javax.swing.JButton btnView;
    private JComboBox<Customer> cbxCustomer;
    private JComboBox<Pet> cbxPet;
    private JComboBox<Service> cbxServices;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtInvoiceID;
    // End of variables declaration//GEN-END:variables
}
